// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Contexts;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Entities.Booking", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ResidenceId")
                        .HasColumnType("int");

                    b.Property<int>("Contract_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ResidenceId", "Contract_Id");

                    b.HasIndex("Contract_Id");

                    b.HasIndex("ResidenceId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("WebApplication1.Entities.Contract", b =>
                {
                    b.Property<int>("Contract_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contract_Id"), 1050L);

                    b.Property<string>("End_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Contract_Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("WebApplication1.Entities.Residence", b =>
                {
                    b.Property<int>("ResidenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResidenceId"), 1000L);

                    b.Property<int>("Apartment_Num")
                        .HasColumnType("int");

                    b.Property<int>("Building_Num")
                        .HasColumnType("int");

                    b.Property<int>("Floor_Num")
                        .HasColumnType("int");

                    b.Property<int>("Num_Of_Rooms")
                        .HasColumnType("int");

                    b.Property<double>("Rent_Fee")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ResidenceId");

                    b.HasIndex("UserId");

                    b.ToTable("Residences");
                });

            modelBuilder.Entity("WebApplication1.Entities.Residence_Pictures", b =>
                {
                    b.Property<int>("ResidenceId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ResidenceId", "Url");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("WebApplication1.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 10L, 10);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("National_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication1.Entities.Booking", b =>
                {
                    b.HasOne("WebApplication1.Entities.Contract", "Contract")
                        .WithMany("Booking")
                        .HasForeignKey("Contract_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebApplication1.Entities.Residence", "Residence")
                        .WithMany("Booking")
                        .HasForeignKey("ResidenceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebApplication1.Entities.User", "User")
                        .WithMany("Booking")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Residence");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Entities.Residence", b =>
                {
                    b.HasOne("WebApplication1.Entities.User", "User")
                        .WithMany("Residences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.Entities.Residence_Pictures", b =>
                {
                    b.HasOne("WebApplication1.Entities.Residence", "Residence")
                        .WithMany("Pictures")
                        .HasForeignKey("ResidenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Residence");
                });

            modelBuilder.Entity("WebApplication1.Entities.Contract", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("WebApplication1.Entities.Residence", b =>
                {
                    b.Navigation("Booking");

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("WebApplication1.Entities.User", b =>
                {
                    b.Navigation("Booking");

                    b.Navigation("Residences");
                });
#pragma warning restore 612, 618
        }
    }
}
